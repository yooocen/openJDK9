#
# Copyright (c) 2015, 2016, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

# This spec file is used to compile a BUILD_JDK while cross compiling. The
# BUILD_JDK runs on the build/host platform and is of the same version as
# the main build.

# First include the real base spec.gmk file
include /Users/chenyongda/YourOpenJDK/build/macosx-x86_64-normal-serverANDclient-slowdebug/spec.gmk

CC := /usr/bin/clang
CXX := /usr/bin/clang++
LD := /usr/bin/clang
LDCXX := /usr/bin/clang++
AS := /usr/bin/clang -c
NM := /usr/bin/nm
AR := /usr/bin/ar
OBJCOPY := 
STRIP := /usr/bin/strip
SYSROOT_CFLAGS :=  -iframework /System/Library/Frameworks -F /System/Library/Frameworks/JavaVM.framework/Frameworks
SYSROOT_LDFLAGS :=  -iframework /System/Library/Frameworks -F /System/Library/Frameworks/JavaVM.framework/Frameworks

# These directories should not be moved to BUILDJDK_OUTPUTDIR
HOTSPOT_OUTPUTDIR := $(patsubst $(BUILD_OUTPUT)%,$(BUILDJDK_OUTPUTDIR)%,$(HOTSPOT_OUTPUTDIR))
SUPPORT_OUTPUTDIR := $(patsubst $(BUILD_OUTPUT)%,$(BUILDJDK_OUTPUTDIR)%,$(SUPPORT_OUTPUTDIR))
JDK_OUTPUTDIR := $(patsubst $(BUILD_OUTPUT)%,$(BUILDJDK_OUTPUTDIR)%,$(JDK_OUTPUTDIR))
IMAGES_OUTPUTDIR := $(patsubst $(BUILD_OUTPUT)%,$(BUILDJDK_OUTPUTDIR)%,$(IMAGES_OUTPUTDIR))

OPENJDK_BUILD_CPU_LEGACY := x86_64
OPENJDK_BUILD_CPU_LEGACY_LIB := amd64
OPENJDK_TARGET_CPU := x86_64
OPENJDK_TARGET_CPU_ARCH := x86
OPENJDK_TARGET_CPU_BITS := 64
OPENJDK_TARGET_CPU_ENDIAN := little
OPENJDK_TARGET_CPU_LEGACY := x86_64

HOTSPOT_TARGET_OS := bsd
HOTSPOT_TARGET_OS_TYPE := posix
HOTSPOT_TARGET_CPU := x86_64
HOTSPOT_TARGET_CPU_ARCH := x86
HOTSPOT_TARGET_CPU_DEFINE := AMD64

CFLAGS_JDKLIB :=  -D_LITTLE_ENDIAN -DMACOSX       -D_LP64=1       -DARCH='"x86_64"' -Dx86_64 -DDEBUG -D_ALLBSD_SOURCE -D_DARWIN_UNLIMITED_SELECT -DMAC_OS_X_VERSION_MAX_ALLOWED=$(subst .,,$(MACOSX_VERSION_MIN)) -mmacosx-version-min=$(MACOSX_VERSION_MIN)       -I$(SUPPORT_OUTPUTDIR)/modules_include/java.base       -I/Users/chenyongda/YourOpenJDK/jdk/src/java.base/share/native/include       -I/Users/chenyongda/YourOpenJDK/jdk/src/java.base/macosx/native/include       -I/Users/chenyongda/YourOpenJDK/jdk/src/java.base/unix/native/include       -I/Users/chenyongda/YourOpenJDK/jdk/src/java.base/share/native/libjava       -I/Users/chenyongda/YourOpenJDK/jdk/src/java.base/unix/native/libjava         -g    
CXXFLAGS_JDKLIB :=  -D_LITTLE_ENDIAN -DMACOSX       -D_LP64=1       -DARCH='"x86_64"' -Dx86_64 -DDEBUG -D_ALLBSD_SOURCE -D_DARWIN_UNLIMITED_SELECT -DMAC_OS_X_VERSION_MAX_ALLOWED=$(subst .,,$(MACOSX_VERSION_MIN)) -mmacosx-version-min=$(MACOSX_VERSION_MIN)       -I$(SUPPORT_OUTPUTDIR)/modules_include/java.base       -I/Users/chenyongda/YourOpenJDK/jdk/src/java.base/share/native/include       -I/Users/chenyongda/YourOpenJDK/jdk/src/java.base/macosx/native/include       -I/Users/chenyongda/YourOpenJDK/jdk/src/java.base/unix/native/include       -I/Users/chenyongda/YourOpenJDK/jdk/src/java.base/share/native/libjava       -I/Users/chenyongda/YourOpenJDK/jdk/src/java.base/unix/native/libjava         -g    
LDFLAGS_JDKLIB :=   -mmacosx-version-min=$(MACOSX_VERSION_MIN) -dynamiclib -compatibility_version 1.0.0 -current_version 1.0.0           -L$(SUPPORT_OUTPUTDIR)/modules_libs/java.base           -L$(SUPPORT_OUTPUTDIR)/modules_libs/java.base/server 
CFLAGS_JDKEXE :=  -D_LITTLE_ENDIAN -DMACOSX       -D_LP64=1       -DARCH='"x86_64"' -Dx86_64 -DDEBUG -D_ALLBSD_SOURCE -D_DARWIN_UNLIMITED_SELECT -DMAC_OS_X_VERSION_MAX_ALLOWED=$(subst .,,$(MACOSX_VERSION_MIN)) -mmacosx-version-min=$(MACOSX_VERSION_MIN)       -I$(SUPPORT_OUTPUTDIR)/modules_include/java.base       -I/Users/chenyongda/YourOpenJDK/jdk/src/java.base/share/native/include       -I/Users/chenyongda/YourOpenJDK/jdk/src/java.base/macosx/native/include       -I/Users/chenyongda/YourOpenJDK/jdk/src/java.base/unix/native/include       -I/Users/chenyongda/YourOpenJDK/jdk/src/java.base/share/native/libjava       -I/Users/chenyongda/YourOpenJDK/jdk/src/java.base/unix/native/libjava   -g  
CXXFLAGS_JDKEXE :=  -D_LITTLE_ENDIAN -DMACOSX       -D_LP64=1       -DARCH='"x86_64"' -Dx86_64 -DDEBUG -D_ALLBSD_SOURCE -D_DARWIN_UNLIMITED_SELECT -DMAC_OS_X_VERSION_MAX_ALLOWED=$(subst .,,$(MACOSX_VERSION_MIN)) -mmacosx-version-min=$(MACOSX_VERSION_MIN)       -I$(SUPPORT_OUTPUTDIR)/modules_include/java.base       -I/Users/chenyongda/YourOpenJDK/jdk/src/java.base/share/native/include       -I/Users/chenyongda/YourOpenJDK/jdk/src/java.base/macosx/native/include       -I/Users/chenyongda/YourOpenJDK/jdk/src/java.base/unix/native/include       -I/Users/chenyongda/YourOpenJDK/jdk/src/java.base/share/native/libjava       -I/Users/chenyongda/YourOpenJDK/jdk/src/java.base/unix/native/libjava   -g  
LDFLAGS_JDKEXE :=   -mmacosx-version-min=$(MACOSX_VERSION_MIN) 

JVM_CFLAGS :=  -D_GNU_SOURCE -flimit-debug-info -D_ALLBSD_SOURCE -D_DARWIN_C_SOURCE -D_XOPEN_SOURCE -fno-rtti -fno-exceptions -fvisibility=hidden         -mno-omit-leaf-frame-pointer -mstack-alignment=16 -pipe -fno-strict-aliasing         -DMAC_OS_X_VERSION_MAX_ALLOWED=1070 -mmacosx-version-min=10.7.0         -fno-omit-frame-pointer -DVM_LITTLE_ENDIAN -D_LP64=1 -Wno-deprecated -Wpointer-arith         -Wsign-compare -Wundef -Wunused-function -Wformat=2
JVM_LDFLAGS :=  -mno-omit-leaf-frame-pointer -mstack-alignment=16 -stdlib=libstdc++ -fPIC -Wl,-rpath,@loader_path/. -Wl,-rpath,@loader_path/..
JVM_ASFLAGS :=  -x assembler-with-cpp -mno-omit-leaf-frame-pointer -mstack-alignment=16
JVM_LIBS :=  -lm

# The compiler for the build platform is likely not warning compatible with the official
# compiler.
WARNINGS_AS_ERRORS := false
DISABLE_WARNING_PREFIX := 

# Save speed and disk space by not enabling debug symbols for the buildjdk
ENABLE_DEBUG_SYMBOLS := false

# Control wether Hotspot builds gtest tests
BUILD_GTEST := false

JVM_VARIANTS := server
JVM_VARIANT_MAIN := server

# Some users still set EXTRA_*FLAGS on the make command line. Must
# make sure to override that when building buildjdk.
override EXTRA_CFLAGS :=
override EXTRA_CXXFLAGS :=
override EXTRA_LDFLAGS :=
