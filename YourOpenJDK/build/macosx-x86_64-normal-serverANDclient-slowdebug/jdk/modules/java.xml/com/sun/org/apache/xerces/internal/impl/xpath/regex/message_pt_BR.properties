parser.atom.1=Um caractere em U+0040-U+005f vir apxF3s \\c.
parser.atom.2=Um '{' xE9 obrigatxF3rio antes de uma categoria de caractere.
parser.atom.3=Um nome de propriedade nxE3o foi fechado por '}'.
parser.atom.4=Metacaractere inesperado.
parser.atom.5=Propriedade desconhecida.
parser.cc.1=Uma classe de caractere POSIX deve ser fechada por '\:]'.
parser.cc.2=Fim inesperado do padrxE3o em uma classe de caractere.
parser.cc.3=Nome desconhecido para uma classe de caractere POSIX.
parser.cc.4='-' xE9 invxE1lido aqui.
parser.cc.5=']' xE9 esperado.
parser.cc.6='[' xE9 invxE1lido em uma classe de caractere. Use '\\['.
parser.cc.7=']' xE9 invxE1lido em uma classe de caractere. Use '\\]'.
parser.cc.8='-' xE9 uma faixa de caracteres invxE1lida. Use '\\-'.
parser.descape.1=NotaxE7xE3o hexadecimal Unicode invxE1lida.
parser.descape.2=Overflow em uma notaxE7xE3o hexadecimal.
parser.descape.3='\\x{' deve ser fechado por '}'.
parser.descape.4=CxF3digo Unicode invxE1lido.
parser.descape.5=Uma xE2ncora nxE3o deve estar aqui.
parser.factor.1=')' xE9 esperado.
parser.factor.2=Fim inesperado do padrxE3o em um grupo de modificadores.
parser.factor.3='\:' xE9 esperado.
parser.factor.4=Fim inesperado do padrxE3o em um grupo condicional.
parser.factor.5=Em um padrxE3o condicional, esperava-se uma referxEAncia retroativa, xE2ncora, lookahead ou lookbehind.
parser.factor.6=HxE1 mais de trxEAs opxE7xF5es em um grupo condicional.
parser.next.1=xC9 obrigatxF3rio um caractere apxF3s \\.
parser.next.2='?' nxE3o xE9 esperado.  '(?\:' ou '(?\=' ou '(?\!' ou '(?<' ou '(?#' ou '(?>'?
parser.next.3='(?<\=' ou '(?<\!' xE9 esperado.
parser.next.4=Um comentxE1rio nxE3o foi finalizado.
parser.ope.1='[' xE9 esperado.
parser.ope.2=')' ou '-[' ou '+[' ou '&[' xE9 esperado.
parser.ope.3=O cxF3digo de fim da faixa xE9 inferior ao de inxEDcio.
parser.parse.1=Caractere incorreto.
parser.parse.2=NxFAmero de referxEAncia invxE1lido.
parser.process.1=Esta expressxE3o nxE3o xE9 suportada na definixE7xE3o da opxE7xE3o atual.
parser.quantifier.1=Quantificador invxE1lido. xC9 esperado um dxEDgito.
parser.quantifier.2=Quantificador invxE1lido. A quantidade xE9 invxE1lida ou estxE1 faltando um '}'.
parser.quantifier.3=Quantificador invxE1lido. xC9 esperado um dxEDgito ou '}'.
parser.quantifier.4=Quantificador invxE1lido. Uma quantidade mxEDnima deve ser <\= uma quantidade mxE1xima.
parser.quantifier.5=Quantificador invxE1lido. Um overflow do valor de quantidade.
