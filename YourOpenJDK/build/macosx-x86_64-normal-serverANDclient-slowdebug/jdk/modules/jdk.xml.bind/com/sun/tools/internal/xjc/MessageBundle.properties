ConsoleErrorReporter.LineXOfY =         \ \ line {0} of {1}
ConsoleErrorReporter.UnknownFile =         unknown file
ConsoleErrorReporter.UnknownLocation =         unknown location
Driver.AddonUsage = \nExtensions\:
Driver.At =         at
Driver.BuildID = 2.3.0-b170531.0717
Driver.CompilingSchema =         compiling a schema...
Driver.DateFormat =         yyyy.MM.dd
Driver.DefaultPackageWarning =     Default Java package specified.  You will not be able to access the generated code from classes in any other package.
Driver.DefaultVersion =         Defaulting the version to JAXB 2.0
Driver.ErrorMessage =         [ERROR] {0}
Driver.ExperimentalLanguageWarning =         Are you trying to compile {0}? Support for {0} is experimental.         You may enable it by using the {1} option.
Driver.FailedToGenerateCode =         Failed to produce code.
Driver.FailedToParse =     Failed to parse "{0}"\: {1}
Driver.FilePrologComment =         This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0-b170531.0717 \n        See <a href\="https\://jaxb.java.net/">https\://jaxb.java.net/</a> \n        Any modifications to this file will be lost upon recompilation of the source schema. \n        Generated on\: {0} \n
Driver.FullVersion =         xjc full version "2.3.0-b170531.0717"
Driver.ILLEGAL_PROXY =     "{0}" is not a valid proxy format. The format is [user[\:password]@]proxyHost\:proxyPort
Driver.ILLEGAL_TARGET_VERSION =     "{0}" is not a valid target version. "2.0" and "2.1" are supported.
Driver.INVALID_JAVA_MODULE_NAME =     invalid Java module name\: "{0}"
Driver.InfoMessage =         [INFO] {0}
Driver.MISSING_PROXYFILE =     the -httpproxyfile option is missing an operand
Driver.MissingGrammar =         grammar is not specified
Driver.MissingModeOperand =         the -mode option is missing an operand
Driver.MissingOperand =         an operand is missing
Driver.MissingProxyHost =         either the -host option is missing an operand \n        or -port was specified but not -host
Driver.MissingProxyPort =         either the -port option is missing an operand \n        or -host was specified but not -port
Driver.NO_SUCH_FILE =     No such file\: {0}
Driver.NonExistentDir =     cowardly refuses to write to a non-existent directory "{0}"
Driver.NotABindingFile =         not an external binding file. The root element must be '{'http\://java.sun.com/xml/ns/jaxb'}'bindings but it is '{'{0}'}'{1}
Driver.NotAFileNorURL =     "{0}" is neither a file name nor a URL
Driver.NotAValidFileName =     "{0}" is not a valid file name\: {1}
Driver.ParseFailed =         Failed to parse a schema.
Driver.ParsingSchema =         parsing a schema...
Driver.Private.Usage = Additional private testing options\:\n\ \ -debug             \:  run in debug mode (includes -verbose)\n\ \ -mode <mode>       \:  run XJC in other running mode\n\ \ -private           \:  display this help message\nMode\:\n\ \ code         \:  generate Java source code (default)\n\ \ dryrun       \:  compile the schema in memory, but don't generate the Java source\n\ \ zip          \:  generate Java source code into a zip file specified by the -d option\n\ \ sig          \:  dump the signatures of the generated code\n\ \ forest       \:  dump transformed DOM forest\n
Driver.Public.Usage = Usage\: xjc [-options ...] <schema file/URL/dir/jar> ... [-b <bindinfo>] ...\nIf dir is specified, all schema files in it will be compiled.\nIf jar is specified, /META-INF/sun-jaxb.episode binding file will be compiled.\nOptions\:\n\ \ -nv                \:  do not perform strict validation of the input schema(s)\n\ \ -extension         \:  allow vendor extensions - do not strictly follow the\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Compatibility Rules and App E.2 from the JAXB Spec\n\ \ -b <file/dir>      \:  specify external bindings files (each <file> must have its own -b)\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ If a directory is given, **/*.xjb is searched\n\ \ -d <dir>           \:  generated files will go into this directory\n\ \ -p <pkg>           \:  specifies the target package\n\ \ -m <name>          \:  generate module-info.java with given Java module name\n\ \ -httpproxy <proxy> \:  set HTTP/HTTPS proxy. Format is [user[\:password]@]proxyHost\:proxyPort\n\ \ -httpproxyfile <f> \:  Works like -httpproxy but takes the argument in a file to protect password \n\ \ -classpath <arg>   \:  specify where to find user class files\n\ \ -catalog <file>    \:  specify catalog files to resolve external entity references\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ support TR9401, XCatalog, and OASIS XML Catalog format.\n\ \ -readOnly          \:  generated files will be in read-only mode\n\ \ -npa               \:  suppress generation of package level annotations (**/package-info.java)\n\ \ -no-header         \:  suppress generation of a file header with timestamp\n\ \ -target (2.0|2.1)  \:  behave like XJC 2.0 or 2.1 and generate code that doesn't use any 2.2 features.\n\ \ -encoding <encoding> \:  specify character encoding for generated source files\n\ \ -enableIntrospection \:  enable correct generation of Boolean getters/setters to enable Bean Introspection apis \n\ \ -disableXmlSecurity  \:  disables XML security features when parsing XML documents \n\ \ -contentForWildcard  \:  generates content property for types with multiple xs\:any derived elements \n\ \ -xmlschema         \:  treat input as W3C XML Schema (default)\n\ \ -dtd               \:  treat input as XML DTD (experimental,unsupported)\n\ \ -wsdl              \:  treat input as WSDL and compile schemas inside it (experimental,unsupported)\n\ \ -verbose           \:  be extra verbose\n\ \ -quiet             \:  suppress compiler output\n\ \ -help              \:  display this help message\n\ \ -version           \:  display version information\n\ \ -fullversion       \:  display full version information\n
Driver.StackOverflow =         Stack overflow. Either you are compiling a large schema that requires more resources, or         XJC has a bug. First, please extend the stack size by using the -Xss JVM option. If this         doesn'''t solve the problem, please use the -debug option to obtain the stack trace and         contact Sun.
Driver.TimeFormat =         hh\:mm\:ss a z
Driver.UnrecognizedMode =         unrecognized mode {0}
Driver.UnrecognizedParameter =         unrecognized parameter {0}
Driver.UnsupportedEncoding =         unsupported encoding\: {0}
Driver.Version =         xjc 2.3.0-b170531.0717
Driver.WarningMessage =         [WARNING] {0}
FAILED_TO_LOAD =     Failed to load "{0}"\: {1}
FIELD_RENDERER_CONFLICT =     "-{0}" and "-{1}" are mutually exclusive since both affect the code generation
ModelLoader.BindingFileNotSupportedForRNC =     External binding files are not supported for the RELAX NG compact syntax.
ModelLoader.TooManySchema =         Too many schema files for this schema language. Compile one file at a time.
NAME_CONVERTER_CONFLICT =     "-{0}" and "-{1}" are mutually exclusive since both affect the code generation
PLUGIN_LOAD_FAILURE =     Failure to load a plugin\: "{0}". Use the system property ''-Dcom.sun.tools.internal.xjc.Options.findServices\=true'' to     diagnose it further
jaxb.jdk.version=2.3.0-b170531.0717
