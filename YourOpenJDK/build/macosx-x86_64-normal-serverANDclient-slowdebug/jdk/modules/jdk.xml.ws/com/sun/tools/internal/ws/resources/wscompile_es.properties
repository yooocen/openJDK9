invoker.needEndorsed=EstxE1 ejecutando JDK6 o una versixF3n posterior que incluye la API JAX-WS {0}, pero esta herramienta necesita la API JAX-WS {1} o una versixF3n posterior. Utilice el mecanismo de sustitucixF3n de estxE1ndares.
wrapperTask.loadingIncorrectApi=Estxe1 cargando la API JAX-WS {0} desde {1}, pero esta herramienta necesita la API JAX-WS {2}.
wrapperTask.needEndorsed=EstxE1 ejecutando JDK6 o una versixF3n posterior que incluye la API JAX-WS {0}, pero esta herramienta necesita la API JAX-WS {1} o una versixF3n posterior. Utilice el mecanismo de sustitucixF3n de estxE1ndares.
wscompile.compilationFailed=fallo de compilacixf3n; se ha debido informar de los errores
wscompile.duplicateOption=opcixf3n duplicada\: {0}
wscompile.error=error\: {0}
wscompile.info=informacixf3n\: {0}
wscompile.invalidOption=parxe1metro {0} no reconocido
wscompile.missingOptionArgument=la opcixf3n \"{0}\" necesita un argumento
wscompile.noSuchDirectory=no se ha encontrado el directorio\: {0}
wscompile.unsupportedEncoding=codificacixf3n no soportada\: {0}
wscompile.warning=advertencia\: {0}
wsgen.cannot.gen.wsdl.for.non.soap.binding=wsgen no puede generar WSDL para enlaces no SOAP\: {0} en la clase {1}
wsgen.cannot.gen.wsdl.for.soap12.binding=wsgen no puede generar WSDL para enlaces SOAP 1.2\: {0} en la clase {1}.Please especifique los conmutadores \\"-extension\\" y \\"-wsdl\:protocol XSoap1.2\\". Por ejemplo\:wsgen -wsdl\:protocol XSoap1.2 -extenson {1}
wsgen.class.must.be.implementation.class=La clase \"{0}\" no es una clase de implantacixf3n de punto final.
wsgen.class.not.found=No se ha encontrado la clase\: \"{0}\"
wsgen.could.not.create.file="No se ha podido crear el archivo\: \"{0}\"
wsgen.help=\nSintaxis\: {0} [options] <SEI>\n\n\\donde [options] incluye\:\n\\  -classpath <ruta de acceso>          especifica dxf3nde se encuentran los archivos de clase de entrada\n\\  -cp <ruta de acceso>                 igual que -classpath <ruta de acceso>\n\\  -d <directorio>             especifica dxf3nde se colocan los archivos de salida generados\n\\  -encoding <codificacixf3n>       especifica la codificacixf3n de caracteres que utilizan los archivos de origen\n\\  -extension                 permite extensiones de proveedor  - funcionalidad no especificada\n\\                             en la especificacixf3n. El uso de extensiones\n\\                             puede dar lugar a aplicaciones que no son portables o\n\\                             que no funcionan con otras implantaciones\n\\  -help                      muestra la ayuda\n\\  -keep                      mantiene archivos generados\n\\  -r <directorio>             directorio de destino de recursos; especifica dxf3nde se\n\\                             colocan archivos de recursos como los WSDL\n\\  -s <directorio>             especifica dxf3nde se colocan los archivos de origen generados\n\\  -verbose                   envxeda mensajes acerca de lo que estxe1 haciendo el compilador\n\\  -version                   imprime la informacixf3n de versixf3n\n\\  -wsdl[\:protocol]           genera un archivo WSDL. El protocolo es opcional.\n\\                             Los protocolos vxe1lidos son {1},\n\\                             el protocolo por defecto es soap1.1.\n\\                             Los protocolos no estxe1ndar {2}\n\\                             sxf3lo se pueden utilizar junto con la opcixf3n\n\\                             -extension.\n\\  -inlineSchemas             esquemas en lxednea en el WSDL generado. Se deben\n\\                             utilizar junto con la opcixf3n -wsdl.\n\\  -servicename <nombre>        especifica el nombre de servicio que se va a utilizar en el WSDL generado\n\\                             Se utiliza junto con la opcixf3n -wsdl.\n\\  -portname <nombre>           especifica el nombre de puerto que se va a utilizar en el WSDL generado\n\\                             Se utiliza junto con la opcixf3n -wsdl.
wsgen.inlineSchemas.only.with.wsdl=\\"-inlineSchemas\\" se debe utilizar junto con la opcixf3n \\"-wsdl\\"
wsgen.invalid.protocol=\"{0}\" no es un protocolo soportado. Los protocolos soportados son\: {1}.
wsgen.invalid.transport=\"{0}\" no es un transporte soportado. El transporte soportado es\: {1}.
wsgen.missingFile=Falta la interfaz de punto final de servicio
wsgen.no.webservices.class=wsgen no ha encontrado ninguna clase con la anotacixf3n @WebService. Especifique la anotacixf3n @WebService en {0}.
wsgen.portname.missing.localname=Al nombre del puerto \"{0}\" le falta un nombre local.
wsgen.portname.missing.namespace=Al nombre del puerto \"{0}\" le falta un espacio de nombres.
wsgen.protocol.without.extension=El protocolo opcional \"{0}\" se debe utilizar junto con la opcixf3n \"-extension\".
wsgen.servicename.missing.localname=Al nombre del servicio \\"{0}\\" le falta un nombre local.
wsgen.servicename.missing.namespace=Al nombre del servicio \\"{0}\\" le falta un espacio de nombres.
wsgen.soap12.without.extension=El protocolo opcional \\"Xsoap1.2\\" se debe utilizar junto con la opcixf3n \\"-extension\\".
wsgen.usage.examples=\n\\Ejemplos\:\n\\ wsgen -cp . example.Stock\n\\ wsgen -cp . example.Stock -wsdl -servicename '{http\://mynamespace}MyService'\n
wsgen.usage=Sintaxis\: {0} [options] <SEI>\n\nUtilice "wsgen -help" para obtener una descripcixf3n detallada de las opciones.
wsgen.wsdl.arg.no.genwsdl=La opcixf3n \\"{0}\\" sxf3lo se puede utilizar junto con la opcixf3n "-wsdl".
wsimport.AUTH_INFO_LINENO = lxednea {0} de {1}
wsimport.CompilingCode=\nCompilando cxf3digo...\n
wsimport.DebugMessage = [DEBUG] {0}
wsimport.ErrorMessage = [ERROR] {0}
wsimport.FailedToParse = Fallo al analizar "{0}"\: {1}
wsimport.GeneratingCode=\nGenerando cxf3digo...\n
wsimport.ILLEGAL_AUTH_INFO = "{0}" no es un formato de informacixf3n de autorizacixf3n vxe1lido. El formato es http[s]\://usuario\:contrasexf1a@host\:puerto//<url-ruta de acceso>.
wsimport.ILLEGAL_TARGET_VERSION = "{0}" no es una versixf3n de destino vxe1lida. "2.0" y "2.1" estxe1n soportadas.
wsimport.InfoMessage = [INFO] {0}
wsimport.NotAFileNorURL = "{0}" no es un nombre de archivo ni una URL
wsimport.ParsingWSDL=analizando WSDL...\n\n
wsimport.WarningMessage = [WARNING] {0}
wsimport.archiveArtifact=Agregando {0} al archivo {1}
wsimport.archivingArtifacts=\nArchivando los artefactos generados en {0}.\n
wsimport.authFileNotFound = No se ha encontrado el archivo de autorizacixf3n "{0}". Si el acceso WSDL necesita autenticacixf3n bxe1sica, proporcione un archivo de autorizacixf3n con acceso de lectura en {1} o utilice -Xauthfile para proporcionar el archivo de autorizacixf3n y, en cada lxednea, proporcione la informacixf3n de autorizacixf3n utilizando este formato\: http[s]\://usuario\:contrasexf1a@host\:puerto//<url-ruta de acceso>
wsimport.authInfoNeeded = {0}, "{1}" necesita autorizacixf3n. Proporcione un archivo de autorizacixf3n con acceso de lectura en {2} o utilice -Xauthfile para proporcionar el archivo de autorizacixf3n y, en cada lxednea, proporcione la informacixf3n de autorizacixf3n utilizando este formato\: http[s]\://usuario\:contrasexf1a@host\:puerto//<url-ruta de acceso>
wsimport.document.download=\nDescargando el documento de metadatos desde {0} en {1}
wsimport.fetchingMetadata=\nDescargando el WSDL y los metadatos asociados\n
wsimport.help=\nSintaxis\: {0} [options] <WSDL_URI>\n\n\\donde [options] incluye\:\n\\  -b <ruta de acceso>                 especifica archivos de enlace jaxws/jaxb o esquemas adicionales\n\\                            (Cada <ruta de acceso> debe tener su propio -b)\n\\  -B<Opcixf3njaxb>            Transfiere esta opcixf3n al compilador de esquemas JAXB\n\\  -catalog <archivo>           especifica un archivo de catxe1logo para resolver las referencias a entidad externa\n\\                            soporta TR9401, XCatalog y el formato de catxe1logo OASIS XML.\n\\  -d <directorio>            especifica dxf3nde se colocan los archivos de salida generados\n\\  -encoding <codificacixf3n>      especifica la codificacixf3n de caracteres que utilizan los archivos de origen\n\\  -extension                permite extensiones de proveedor - funcionalidad no especificada\n\\                            en la especificacixf3n. El uso de extensiones puede\n\\                            dar lugar a aplicaciones que no son portables o\n\\                            que no funcionan con otras implantaciones\n\\  -help                     muestra la ayuda\n\\  -httpproxy\:<host>\:<puerto>  especifica un servidor proxy HTTP (el puerto por defecto es 8080)\n\\  -keep                     mantiene los archivos generados\n\\  -p <paquete>                  especifica el paquete de destino\n\\  -quiet                    suprime la salida de wsimport\n\\  -s <directorio>            especifica dxf3nde se colocan los archivos de origen generados\n\\  -target <versixf3n>         genera cxf3digo de acuerdo con la versixf3n de la especificacixf3n JAXWS indicada\n\\                            El valor por defecto es 2.2; los valores aceptados son 2.0, 2.1 y 2.2\n\\                            por ejemplo, 2.0 generarxe1 cxf3digo compatible con la especificacixf3n JAX-WS 2.0\n\\  -verbose                  envxeda mensajes acerca de lo que estxe1 haciendo el compilador\n\\  -version                  imprime la informacixf3n de versixf3n\n\\  -wsdllocation <ubicacixf3n>  valor de @WebServiceClient.wsdlLocation\n\\  -clientjar <archivo jar>      crea el archivo jar de los artefactos generados junto con los\n\\                            metadatos WSDL necesarios para llamar al servicio web.\n\\  -generateJWS              genera un archivo de implantacixf3n JWS con stub\n\\  -implDestDir <directorio>  especifica dxf3nde se genera el archivo de implantacixf3n JWS\n\\  -implServiceName <nombre>   parte local del nombre de servicio de la implantacixf3n de JWS generada\n\\  -implPortName <nombre>      parte local del nombre de puerto de la implantacixf3n de JWS generada
wsimport.httpRedirect = El servidor ha devuelto el cxf3digo de estado HTTP\: "{0}"; reintentando con "{1}"
wsimport.maxRedirectAttempt = No se puede obtener un WSDL. Se ha alcanzado el nxfamero mxe1ximo de redireccionamientos (5).
wsimport.missingFile=Falta WSDL_URI
wsimport.no.wsdl=Fallo al leer el documento WSDL\: {0}, porque 1) no se ha encontrado el documento, 2) el documento no se ha podido leer; 3) el elemento raxedz del documento no es <wsdl\:definitions>.
wsimport.noSuchJaxbOption=no existe esa opcixf3n JAXB\: {0}
wsimport.readingAuthFile = Intentando leer el archivo de autorizacixf3n\: "{0}"...
wsimport.usage.examples=\n\\Ejemplos\:\n\\ wsimport stock.wsdl -b stock.xml -b stock.xjb\n\\ wsimport -d genera http\://example.org/stock?wsdl\n
wsimport.usage.extensions=\n\\Extensiones\:\n\\  -XadditionalHeaders              asigna cabeceras no enlazadas a la solicitud o el mensaje de respuesta a los \n\\                                   parxe1metros del mxe9todo Java\n\\  -Xauthfile                       archivo que lleva la informacixf3n de autorizacixf3n en el formato \n\\                                   http\://username\:password@example.org/stock?wsdl\n\\  -Xdebug                          imprime la informacixf3n de depuracixf3n\n\\  -Xno-addressing-databinding      permite el enlace de W3C EndpointReferenceType a Java\n\\  -Xnocompile                      no compila los archivos Java generados\n\\  -XdisableAuthenticator           desactiva el autenticador utilizado por la implantacixf3n de referencia de JAX-WS,\n\\                                   la opcixf3n -Xauthfile se ignora si estxe1 definida\n\\  -XdisableSSLHostnameVerification desactiva la verificacixf3n del nombre de host SSL al recuperar\n\\                                   wsdls
wsimport.usage=Sintaxis\: {0} [options] <WSDL_URI>\n\nUtilice "wsimport -help" para obtener una descripcixf3n detallada de las opciones.
wsimport.wsdllocation.clientjar = wsdlLocation no se puede especificar al utilizar la opcixf3n clientJar
