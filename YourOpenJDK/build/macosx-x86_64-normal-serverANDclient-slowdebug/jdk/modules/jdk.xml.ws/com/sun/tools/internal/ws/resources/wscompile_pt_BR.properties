invoker.needEndorsed=VocxEA estxE1 executando no JDK6 ou mais recente que vem com a API de JAX-WS {0}, mas esta ferramenta exige a API de JAX-WS {1} ou mais recente. Use o mecanismo de substituixE7xE3o de padrxF5es.
wrapperTask.loadingIncorrectApi=Vocxea estxe1 carregando a API de JAX-WS {0} de {1}, mas esta ferramenta requer a API de JAX-WS {2}.
wrapperTask.needEndorsed=VocxEA estxE1 executando no JDK6 ou mais recente que vem com a API de JAX-WS {0}, mas esta ferramenta exige a API de JAX-WS {1} ou mais recente. Use o mecanismo de substituixE7xE3o de padrxF5es.
wscompile.compilationFailed=falha na compilaxe7xe3o, os erros foram reportados
wscompile.duplicateOption=opxe7xe3o\: {0} duplicada
wscompile.error=erro\: {0}
wscompile.info=informaxe7xf5es\: {0}
wscompile.invalidOption=parxe2metro {0} nxe3o reconhecido
wscompile.missingOptionArgument=a opxe7xe3o \"{0}\" requer um argumento
wscompile.noSuchDirectory=diretxf3rio nxe3o encontrado\: {0}
wscompile.unsupportedEncoding=codificaxe7xe3o nxe3o suportada\: {0}
wscompile.warning=advertxeancia\: {0}
wsgen.cannot.gen.wsdl.for.non.soap.binding=wsgen nxe3o pode gerar WSDL para bind nxe3o-SOAP\: {0} na Classe {1}
wsgen.cannot.gen.wsdl.for.soap12.binding=wsgen nxe3o pode gerar WSDL para bind de SOAP 1.2\: {0} na classe\: {1}.Please especifique as chaves \"-extension\" e \"-wsdl\:protocol XSoap1.2\". Por exemplo\:wsgen -wsdl\:protocol XSoap1.2 -extension {1}
wsgen.class.must.be.implementation.class=A classe \"{0}\" nxe3o xe9 uma classe de implementaxe7xe3o de ponto final.
wsgen.class.not.found=Classe nxe3o encontrada\: \"{0}\"
wsgen.could.not.create.file=Nxe3o foi possxedvel criar o arquivo\: \"{0}\"
wsgen.help=\nUso\: {0} [options] <SEI>\n\n\\onde [options] inclui\:\n\\  -classpath <path>          especifica onde localizar os arquivos de classe de entrada\n\\  -cp <path>                 igual a -classpath <path>\n\\  -d <directory>             especifica onde colocar os arquivos de saxedda gerados\n\\  -encoding <encoding>       especifica a codificaxe7xe3o de caracteres usada pelos arquivos de origem\n\\  -extension                 permite as extensxf5es do fornecedor - funcionalidade nxe3o especificada\n\\                             pela especificaxe7xe3o.  O uso das extensxf5es pode\n\\                             resultar em aplicaxe7xf5es que nxe3o sxe3o portxe1veis ou\n\\                             nxe3o pode interoperar com outras implementaxe7xf5es\n\\  -help                      exibe ajuda\n\\  -keep                      mantxe9m arquivos gerados\n\\  -r <directory>             diretxf3rio de destino do recurso, especifica onde\n\\                             colocar arquivos de recursos, como WSDLs\n\\  -s <directory>             especifica onde colocar os arquivos de origem gerados\n\\  -verbose                   mensagens de saxedda sobre o que o compilador estxe1 fazendo\n\\  -version                   imprime informaxe7xf5es da versxe3o\n\\  -wsdl[\:protocol]           gera um arquivo WSDL. O protocolo xe9 opcional.\n\\                             Os protocolos vxe1lidos sxe3o {1},\n\\                             o default xe9 soap1.1.\n\\                             Os protocolos nxe3o padrxe3o {2}\n\\                             sxf3 podem ser usados junto com a\n\\                             opxe7xe3o -extension.\n\\  -inlineSchemas             os esquemas em linha no wsdl gerado. Devem ser\n\\                             usados junto com a opxe7xe3o -wsdl.\n\\  -servicename <name>        especifica o nome do Servixe7o a ser usado no WSDL gerado\n\\                             Usado junto com a opxe7xe3o -wsdl.\n\\  -portname <name>           especifica o nome da Porta a ser usado no WSDL gerado\n\\                             Usado junto com a opxe7xe3o -wsdl.
wsgen.inlineSchemas.only.with.wsdl=\"-inlineSchemas\" deve ser usado junto com a opxe7xe3o \"-wsdl\"
wsgen.invalid.protocol=\"{0}\" nxe3o xe9 um protocolo suportado. Os protocolos suportados sxe3o\: {1}.
wsgen.invalid.transport=\"{0}\" nxe3o xe9 um transporte suportado. Os transportes suportados sxe3o\: {1}.
wsgen.missingFile=SEI Nxe3o Encontrado
wsgen.no.webservices.class=wsgen nxe3o encontrou nenhuma classe com a anotaxe7xe3o @WebService. Especifique a anotaxe7xe3o @WebService em {0}.
wsgen.portname.missing.localname=O nome da porta \"{0}\" nxe3o encontrou um localname.
wsgen.portname.missing.namespace=O nome da porta \"{0}\" nxe3o encontrou um namespace.
wsgen.protocol.without.extension=O protocolo \"{0}\" opcional deve ser usado junto com a opxe7xe3o \"-extension\".
wsgen.servicename.missing.localname=O nome do servixe7o \"{0}\" nxe3o encontrou um localname.
wsgen.servicename.missing.namespace=O nome do servixe7o \"{0}\" nxe3o encontrou um  namespace.
wsgen.soap12.without.extension=O protocolo \"Xsoap1.2\" opcional deve ser usado junto com a opxe7xe3o \"-extension\".
wsgen.usage.examples=\n\\Exemplos\:\n\  wsgen -cp . example.Stock\n\  wsgen -cp . example.Stock -wsdl -servicename '{http\://mynamespace}MyService'\n
wsgen.usage=Uso\: {0} [options] <SEI>\n\nUse "wsgen -help" para obter uma descrixe7xe3o detalhada das opxe7xf5es.
wsgen.wsdl.arg.no.genwsdl=A opxe7xe3o \"{0}\" sxf3 pode ser usada junto com a opxe7xe3o "-wsdl".
wsimport.AUTH_INFO_LINENO = linha {0} de {1}
wsimport.CompilingCode=\nCompilando o cxf3digo...\n
wsimport.DebugMessage = [DEBUG] {0}
wsimport.ErrorMessage = [ERROR] {0}
wsimport.FailedToParse = Falha ao fazer parse "{0}"\: {1}
wsimport.GeneratingCode=\nGerando o cxf3digo...\n
wsimport.ILLEGAL_AUTH_INFO = "{0}" nxe3o estxe1 no formato de informaxe7xf5es de autorizaxe7xe3o vxe1lido. O formato xe9 http[s]\://user\:password@host\:port//<url-path>.
wsimport.ILLEGAL_TARGET_VERSION = "{0}" nxe3o xe9 uma versxe3o do alvo vxe1lida. "2.0" e "2.1" sxe3o suportadas.
wsimport.InfoMessage = [INFO] {0}
wsimport.NotAFileNorURL = "{0}" nxe3o xe9 um nome de arquivo nem um URL
wsimport.ParsingWSDL=fazendo parse do WSDL...\n\n
wsimport.WarningMessage = [WARNING] {0}
wsimport.archiveArtifact=Adicionando {0} ao archive {1}
wsimport.archivingArtifacts=\nArquivando os artefatos gerados em {0}.\n
wsimport.authFileNotFound = Arquivo de autorizaxe7xe3o "{0}" nxe3o encontrado. Se o acesso do WSDL precisar da Autenticaxe7xe3o Bxe1sica, fornexe7a o arquivo de autorizaxe7xe3o com o acesso de leitura em {1} ou use -Xauthfile para fornecer o arquivo de autorizaxe7xe3o em cada linha para fornecer informaxe7xf5es de autorizaxe7xe3o usando este formato \: http[s]\://user\:password@host\:port//<url-path>
wsimport.authInfoNeeded = {0},  "{1}" precisa de autorizaxe7xe3o; fornexe7a o arquivo de autorizaxe7xe3o com o acesso de leitura em {2} ou use -Xauthfile para fornecer o arquivo de autorizaxe7xe3o em cada linha para fornecer informaxe7xf5es de autorizaxe7xe3o usando este formato \: http[s]\://user\:password@host\:port//<url-path>
wsimport.document.download=\nFazendo download do documento de metadados de {0} para {1}
wsimport.fetchingMetadata=\nFazendo download do WSDL e dos metadados associados\n
wsimport.help=\nUso\: {0} [options] <WSDL_URI>\n\n\\onde [options] inclui\:\n\\  -b <path>                 especifica os arquivos de bind jaxws/jaxb ou esquemas adicionais\n\\                            (Cada <path> deve ter seu prxf3prio -b)\n\\  -B<jaxbOption>            Passe esta opxe7xe3o para o compilador do esquema JAXB\n\\  -catalog <file>           especifique o arquivo do catxe1logo para resolver as referxeancias da entidade externa\n\\                            suporta o formato do Catxe1logo TR9401, XCatalog e OASIS XML.\n\\  -d <directory>            especifica onde colocar os arquivos de saxedda gerados\n\\  -encoding <encoding>      especifica a codificaxe7xe3o de caracteres usada pelos arquivos de origem\n\\  -extension                permite extensxf5es do fornecedor - funcionalidade nxe3o especificada\n\\                            pela especificaxe7xe3o. O uso das extensxf5es pode\n\\                            resultar em aplicaxe7xf5es que nxe3o sxe3o portxe1veis ou\n\\                            nxe3o pode interoperar com outras implementaxe7xf5es\n\\  -help                     display help\n\\  -httpproxy\:<host>\:<port>  especifica um servidor proxy HTTP (a porta xe9 definida como default para 8080)\n\\  -keep                     mantxe9m arquivos gerados\n\\  -p <pkg>                  especifica o pacote do alvo\n\\  -quiet                    suprime a saxedda wsimport\n\\  -s <directory>            especifica onde colocar os arquivos de origem gerados\n\\  -target <version>         gera cxf3digos conforme versxe3o de especificaxe7xe3o JAXWS fornecida\n\\                            xc9 definido como default para 2.2. Os valores aceitos sxe3o 2.0, 2.1 e 2.2\n\\                            por exemplo 2.0 irxe1 gerar o cxf3digo compatxedvel para a especificaxe7xe3o JAXWS 2.0\n\\  -verbose                  as mensagens de saxedda sobre o que o compilador estxe1 fazendo\n\\  -version                  imprime as informaxe7xf5es da versxe3o\n\n\\  -wsdllocation <location>  @WebServiceClient.wsdlLocation value\n\\  -clientjar <jarfile>      Cria o arquivo jar dos artefatos gerados junto com os\n\\                            metadados WSDL necessxe1rios para chamar o web service.\n\\  -generateJWS              gera arquivo de implementaxe7xe3o JWS com stub\n\\  -implDestDir <directory>  especifica onde gerar o arquivo de implementaxe7xe3o de JWS\n\\  -implServiceName <name>   parte do local do nome de servixe7o para implementaxe7xe3o JWS gerada\n\\  -implPortName <name>      parte do local do nome da porta para implementaxe7xe3o de JWS gerada
wsimport.httpRedirect = O servidor retornou o cxf3digo de Status HTTP\: "{0}", recuperando com "{1}"
wsimport.maxRedirectAttempt = Nxe3o xe9 possxedvel obter um WSDL - nxfamero mxe1ximo de (5) redirecionamentos atingido.
wsimport.missingFile=WSDL_URI nxe3o encontrado
wsimport.no.wsdl=Falha ao ler o documento WSDL\: {0}, porque 1) nxe3o pxf4de localizar o documento; 2) o documento nxe3o pxf4de ser lido; 3) o elemento-raiz do documento nxe3o xe9 <wsdl\:definitions>.
wsimport.noSuchJaxbOption=nenhuma opxe7xe3o do JAXB\: {0}
wsimport.readingAuthFile = Tentando ler o arquivo de autorizaxe7xe3o \: "{0}"...
wsimport.usage.examples=\n\\Exemplos\:\n\  wsimport stock.wsdl -b stock.xml -b stock.xjb\n\  wsimport -d gerou http\://example.org/stock?wsdl\n
wsimport.usage.extensions=\n\\Extensxf5es\:\n\\  -XadditionalHeaders              mapeia cabexe7alhos nxe3o vinculados para mensagem de solicitaxe7xe3o ou resposta para \n\\                                   parxe2metros do mxe9todo Java\n\\  -Xauthfile                       arquivo para transmitir informaxe7xf5es de autorizaxe7xe3o no formato \n\\                                   http\://username\:password@example.org/stock?wsdl\n\\  -Xdebug                          imprime informaxe7xf5es de depuraxe7xe3o\n\\  -Xno-addressing-databinding      permite bind de W3C EndpointReferenceType para Java\n\\  -Xnocompile                      nxe3o compilar arquivos Java gerados\n\\  -XdisableAuthenticator           desativar Autenticador usado por JAX-WS RI,\n\\                                   a opxe7xe3o -Xauthfile serxe1 ignorada, se definida\n\\  -XdisableSSLHostnameVerification desativa a verificaxe7xe3o de Nome do host de SSL ao extrair\n\\                                   wsdls
wsimport.usage=Uso\: {0} [options] <WSDL_URI>\n\nUse "wsimport -help" para obter uma descrixe7xe3o detalhada das opxe7xf5es.
wsimport.wsdllocation.clientjar = wsdlLocation nxe3o pode ser especificado ao usar a opxe7xe3o clientJar
