/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class jdk_vm_ci_hotspot_CompilerToVM */

#ifndef _Included_jdk_vm_ci_hotspot_CompilerToVM
#define _Included_jdk_vm_ci_hotspot_CompilerToVM
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    registerNatives
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_registerNatives
  (JNIEnv *, jclass);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    getBytecode
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl;)[B
 */
JNIEXPORT jbyteArray JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_getBytecode
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    getExceptionTableLength
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl;)I
 */
JNIEXPORT jint JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_getExceptionTableLength
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    getExceptionTableStart
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl;)J
 */
JNIEXPORT jlong JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_getExceptionTableStart
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    isCompilable
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl;)Z
 */
JNIEXPORT jboolean JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_isCompilable
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    hasNeverInlineDirective
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl;)Z
 */
JNIEXPORT jboolean JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_hasNeverInlineDirective
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    shouldInlineMethod
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl;)Z
 */
JNIEXPORT jboolean JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_shouldInlineMethod
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    findUniqueConcreteMethod
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl;Ljdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl;)Ljdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl;
 */
JNIEXPORT jobject JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_findUniqueConcreteMethod
  (JNIEnv *, jobject, jobject, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    getImplementor
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl;)Ljdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl;
 */
JNIEXPORT jobject JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_getImplementor
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    methodIsIgnoredBySecurityStackWalk
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl;)Z
 */
JNIEXPORT jboolean JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_methodIsIgnoredBySecurityStackWalk
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    lookupType
 * Signature: (Ljava/lang/String;Ljava/lang/Class;Z)Ljdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl;
 */
JNIEXPORT jobject JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_lookupType
  (JNIEnv *, jobject, jstring, jclass, jboolean);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    resolveConstantInPool
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotConstantPool;I)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_resolveConstantInPool
  (JNIEnv *, jobject, jobject, jint);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    resolvePossiblyCachedConstantInPool
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotConstantPool;I)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_resolvePossiblyCachedConstantInPool
  (JNIEnv *, jobject, jobject, jint);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    lookupNameAndTypeRefIndexInPool
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotConstantPool;I)I
 */
JNIEXPORT jint JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_lookupNameAndTypeRefIndexInPool
  (JNIEnv *, jobject, jobject, jint);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    lookupNameInPool
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotConstantPool;I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_lookupNameInPool
  (JNIEnv *, jobject, jobject, jint);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    lookupSignatureInPool
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotConstantPool;I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_lookupSignatureInPool
  (JNIEnv *, jobject, jobject, jint);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    lookupKlassRefIndexInPool
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotConstantPool;I)I
 */
JNIEXPORT jint JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_lookupKlassRefIndexInPool
  (JNIEnv *, jobject, jobject, jint);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    lookupKlassInPool
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotConstantPool;I)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_lookupKlassInPool
  (JNIEnv *, jobject, jobject, jint);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    lookupMethodInPool
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotConstantPool;IB)Ljdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl;
 */
JNIEXPORT jobject JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_lookupMethodInPool
  (JNIEnv *, jobject, jobject, jint, jbyte);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    resolveInvokeDynamicInPool
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotConstantPool;I)V
 */
JNIEXPORT void JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_resolveInvokeDynamicInPool
  (JNIEnv *, jobject, jobject, jint);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    resolveInvokeHandleInPool
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotConstantPool;I)V
 */
JNIEXPORT void JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_resolveInvokeHandleInPool
  (JNIEnv *, jobject, jobject, jint);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    getSignaturePolymorphicHolders
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_getSignaturePolymorphicHolders
  (JNIEnv *, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    resolveTypeInPool
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotConstantPool;I)Ljdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl;
 */
JNIEXPORT jobject JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_resolveTypeInPool
  (JNIEnv *, jobject, jobject, jint);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    resolveFieldInPool
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotConstantPool;ILjdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl;B[I)Ljdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl;
 */
JNIEXPORT jobject JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_resolveFieldInPool
  (JNIEnv *, jobject, jobject, jint, jobject, jbyte, jintArray);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    constantPoolRemapInstructionOperandFromCache
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotConstantPool;I)I
 */
JNIEXPORT jint JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_constantPoolRemapInstructionOperandFromCache
  (JNIEnv *, jobject, jobject, jint);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    lookupAppendixInPool
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotConstantPool;I)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_lookupAppendixInPool
  (JNIEnv *, jobject, jobject, jint);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    installCode
 * Signature: (Ljdk/vm/ci/code/TargetDescription;Ljdk/vm/ci/hotspot/HotSpotCompiledCode;Ljdk/vm/ci/code/InstalledCode;Ljdk/vm/ci/hotspot/HotSpotSpeculationLog;)I
 */
JNIEXPORT jint JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_installCode
  (JNIEnv *, jobject, jobject, jobject, jobject, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    getMetadata
 * Signature: (Ljdk/vm/ci/code/TargetDescription;Ljdk/vm/ci/hotspot/HotSpotCompiledCode;Ljdk/vm/ci/hotspot/HotSpotMetaData;)I
 */
JNIEXPORT jint JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_getMetadata
  (JNIEnv *, jobject, jobject, jobject, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    resetCompilationStatistics
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_resetCompilationStatistics
  (JNIEnv *, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    readConfiguration
 * Signature: ()[Ljava/lang/Object;
 */
JNIEXPORT jobjectArray JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_readConfiguration
  (JNIEnv *, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    resolveMethod
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl;Ljdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl;Ljdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl;)Ljdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl;
 */
JNIEXPORT jobject JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_resolveMethod
  (JNIEnv *, jobject, jobject, jobject, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    getClassInitializer
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl;)Ljdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl;
 */
JNIEXPORT jobject JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_getClassInitializer
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    hasFinalizableSubclass
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl;)Z
 */
JNIEXPORT jboolean JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_hasFinalizableSubclass
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    asResolvedJavaMethod
 * Signature: (Ljava/lang/reflect/Executable;)Ljdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl;
 */
JNIEXPORT jobject JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_asResolvedJavaMethod
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    getMaxCallTargetOffset
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_getMaxCallTargetOffset
  (JNIEnv *, jobject, jlong);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    disassembleCodeBlob
 * Signature: (Ljdk/vm/ci/code/InstalledCode;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_disassembleCodeBlob
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    getStackTraceElement
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl;I)Ljava/lang/StackTraceElement;
 */
JNIEXPORT jobject JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_getStackTraceElement
  (JNIEnv *, jobject, jobject, jint);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    executeInstalledCode
 * Signature: ([Ljava/lang/Object;Ljdk/vm/ci/code/InstalledCode;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_executeInstalledCode
  (JNIEnv *, jobject, jobjectArray, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    getLineNumberTable
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl;)[J
 */
JNIEXPORT jlongArray JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_getLineNumberTable
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    getLocalVariableTableLength
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl;)I
 */
JNIEXPORT jint JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_getLocalVariableTableLength
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    getLocalVariableTableStart
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl;)J
 */
JNIEXPORT jlong JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_getLocalVariableTableStart
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    doNotInlineOrCompile
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl;)V
 */
JNIEXPORT void JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_doNotInlineOrCompile
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    reprofile
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl;)V
 */
JNIEXPORT void JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_reprofile
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    invalidateInstalledCode
 * Signature: (Ljdk/vm/ci/code/InstalledCode;)V
 */
JNIEXPORT void JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_invalidateInstalledCode
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    collectCounters
 * Signature: ()[J
 */
JNIEXPORT jlongArray JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_collectCounters
  (JNIEnv *, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    isMature
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_isMature
  (JNIEnv *, jobject, jlong);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    allocateCompileId
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl;I)I
 */
JNIEXPORT jint JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_allocateCompileId
  (JNIEnv *, jobject, jobject, jint);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    hasCompiledCodeForOSR
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl;II)Z
 */
JNIEXPORT jboolean JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_hasCompiledCodeForOSR
  (JNIEnv *, jobject, jobject, jint, jint);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    getSymbol
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_getSymbol
  (JNIEnv *, jobject, jlong);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    getNextStackFrame
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotStackFrameReference;[Ljdk/vm/ci/meta/ResolvedJavaMethod;I)Ljdk/vm/ci/hotspot/HotSpotStackFrameReference;
 */
JNIEXPORT jobject JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_getNextStackFrame
  (JNIEnv *, jobject, jobject, jobjectArray, jint);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    materializeVirtualObjects
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotStackFrameReference;Z)V
 */
JNIEXPORT void JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_materializeVirtualObjects
  (JNIEnv *, jobject, jobject, jboolean);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    getVtableIndexForInterfaceMethod
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl;Ljdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl;)I
 */
JNIEXPORT jint JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_getVtableIndexForInterfaceMethod
  (JNIEnv *, jobject, jobject, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    shouldDebugNonSafepoints
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_shouldDebugNonSafepoints
  (JNIEnv *, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    writeDebugOutput
 * Signature: ([BII)V
 */
JNIEXPORT void JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_writeDebugOutput
  (JNIEnv *, jobject, jbyteArray, jint, jint);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    flushDebugOutput
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_flushDebugOutput
  (JNIEnv *, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    getResolvedJavaMethod
 * Signature: (Ljava/lang/Object;J)Ljdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl;
 */
JNIEXPORT jobject JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_getResolvedJavaMethod
  (JNIEnv *, jobject, jobject, jlong);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    getConstantPool
 * Signature: (Ljava/lang/Object;)Ljdk/vm/ci/hotspot/HotSpotConstantPool;
 */
JNIEXPORT jobject JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_getConstantPool
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    getResolvedJavaType
 * Signature: (Ljava/lang/Object;JZ)Ljdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl;
 */
JNIEXPORT jobject JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_getResolvedJavaType
  (JNIEnv *, jobject, jobject, jlong, jboolean);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    methodDataProfileDataSize
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_methodDataProfileDataSize
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    getFingerprint
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_getFingerprint
  (JNIEnv *, jobject, jlong);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    interpreterFrameSize
 * Signature: (Ljdk/vm/ci/code/BytecodeFrame;)I
 */
JNIEXPORT jint JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_interpreterFrameSize
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    compileToBytecode
 * Signature: (Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_compileToBytecode
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    getFlagValue
 * Signature: (Ljava/lang/String;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_getFlagValue
  (JNIEnv *, jobject, jstring);

/*
 * Class:     jdk_vm_ci_hotspot_CompilerToVM
 * Method:    getHostClass
 * Signature: (Ljdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl;)Ljdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl;
 */
JNIEXPORT jobject JNICALL Java_jdk_vm_ci_hotspot_CompilerToVM_getHostClass
  (JNIEnv *, jobject, jobject);

#ifdef __cplusplus
}
#endif
#endif
